
--------------------------------------------------
TXLib сообщает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe, файл: c:\codeblocks\mingw\include\txlib.h, строка: 13628, функция: bool {anonymous}::TX::txBitBlt(HDC, double, double, double, double, HDC, double, double, unsigned int),

Сообщение: Параметр "sourceImage" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F42FC (32-bit), Flags: CMdRe0, Thread: 0xDB8 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x00416F73 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: txBitBlt() at c:/codeblocks/mingw/include/txlib.h (13628)

# 1 0x0041D695 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (74):

     72: 
     73: 
=>   74:         txBitBlt(txDC(), 600, 300, 348, 313, vaza1);
     75: 
     76:         txEnd();

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 20 2024 18:25:20, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 20 2024 18:25:27

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib сообщает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe, файл: c:\codeblocks\mingw\include\txlib.h, строка: 13628, функция: bool {anonymous}::TX::txBitBlt(HDC, double, double, double, double, HDC, double, double, unsigned int),

Сообщение: Параметр "sourceImage" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F42FC (32-bit), Flags: CMdRe0, Thread: 0x24C8 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x00416F73 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: txBitBlt() at c:/codeblocks/mingw/include/txlib.h (13628)

# 1 0x0041D695 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (74):

     72: 
     73: 
=>   74:         txBitBlt(txDC(), 600, 300, 378, 313, vaza1);
     75: 
     76:         txEnd();

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 20 2024 18:25:52, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 20 2024 18:25:57

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib сообщает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe, файл: c:\codeblocks\mingw\include\txlib.h, строка: 13628, функция: bool {anonymous}::TX::txBitBlt(HDC, double, double, double, double, HDC, double, double, unsigned int),

Сообщение: Параметр "sourceImage" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F42FC (32-bit), Flags: CMdRe0, Thread: 0x3640 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x00416F73 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: txBitBlt() at c:/codeblocks/mingw/include/txlib.h (13628)

# 1 0x0041D695 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (74):

     72: 
     73: 
=>   74:         txBitBlt(txDC(), 600, 300, 378, 313, vaza1);
     75: 
     76:         txEnd();

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 20 2024 18:26:33, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 20 2024 18:26:37

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib сообщает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe, файл: c:\codeblocks\mingw\include\txlib.h, строка: 13678, функция: bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF),

Сообщение: Прямоугольник копируемой области {0, 0, 378, 313} не полностью лежит внутри изображения-источника {0, 0, 200, 165}, функция txTransparentBlt() работать не будет.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F42FC (32-bit), Flags: CMdRe0, Thread: 0x5DC (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x00417523 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: txTransparentBlt() at c:/codeblocks/mingw/include/txlib.h (13678)

# 1 0x0041D695 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (74):

     72: 
     73: 
=>   74:         txTransparentBlt(txDC(), 600, 300, 378, 313, vaza1, 0, 0, TX_WHITE);
     75: 
     76:         txEnd();

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 20 2024 18:30:29, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 20 2024 18:30:33

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00442B7C в функции _M_is_leaked() в файле c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0x0000010A в модуле C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F62FC (32-bit), Flags: CMdRe0, Thread: 0xACC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00442B7C in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: _M_is_leaked() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00471C6B in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: swap() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00479639 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0043D4A6 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0041DF19 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (92):

     90:     pic[5] = {10, 200, txLoadImage("Pictures/Овощи/Помидор.bmp"), 50, 50, 100, 100, false, "Овощи"};
     91: 
=>   92:     pic[6] = {10, 100, txLoadImage("Pictures/Ягоды/Клубника.bmp"), 50, 50, 100, 100, false, "Ягоды"};
     93: 
     94: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 30 2024 18:07:12, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 30 2024 18:07:17

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00442B7C в функции _M_is_leaked() в файле c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0x0000010A в модуле C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F62FC (32-bit), Flags: CMdRe0, Thread: 0xACC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00442B7C in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: _M_is_leaked() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00471C6B in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: swap() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00479639 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0043D4A6 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0041DF19 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (92):

     90:     pic[5] = {10, 200, txLoadImage("Pictures/Овощи/Помидор.bmp"), 50, 50, 100, 100, false, "Овощи"};
     91: 
=>   92:     pic[6] = {10, 100, txLoadImage("Pictures/Ягоды/Клубника.bmp"), 50, 50, 100, 100, false, "Ягоды"};
     93: 
     94: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 30 2024 18:07:12, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 30 2024 18:07:17

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00442E6C в функции _M_is_leaked() в файле c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0xFFFFFFFC в модуле C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F62FC (32-bit), Flags: CMdRe0, Thread: 0xDFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00442E6C in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: _M_is_leaked() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00471F5B in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: swap() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00479929 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0043D611 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0041D863 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (81):

     79:     btn[3] = {610, 10, 150, 30, "Ягоды", "Ягоды"};
     80:     btn[4] = {780, 10, 150, 30, "Грибы", "Грибы"};
=>   81:     btn[5] = {950, 10, 150, 30, "Цветы", "Цветы"};
     82:     //создание массива картинок меню
     83:     Picture pic[count_pic];

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 30 2024 18:11:12, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 30 2024 18:11:17

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00442E6C в функции _M_is_leaked() в файле c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0xFFFFFFFC в модуле C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400], Instance: 0x004F62FC (32-bit), Flags: CMdRe0, Thread: 0xDFC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00442E6C in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: _M_is_leaked() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00471F5B in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: swap() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00479929 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0043D611 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: operator=() at c:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0041D863 in C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe: main() at C:/Users/root/source/repos/Graf/main.cpp (81):

     79:     btn[3] = {610, 10, 150, 30, "Ягоды", "Ягоды"};
     80:     btn[4] = {780, 10, 150, 30, "Грибы", "Грибы"};
=>   81:     btn[5] = {950, 10, 150, 30, "Цветы", "Цветы"};
     82:     //создание массива картинок меню
     83:     Picture pic[count_pic];

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2021-07-19 01:45:49 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	c:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 30 2024 18:11:12, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, Debug
Started:	Sep 30 2024 18:11:18

Run file:	C:\Users\root\source\repos\Graf\bin\Debug\Graf.exe
Directory:	C:\Users\root\source\repos\Graf

--------------------------------------------------
